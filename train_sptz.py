# -*- coding: utf-8 -*-
"""train9-yolol-ger8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yCPnPTtc4iu4efzw0QsvezhoiHDrYoii
"""

import os
HOME = os.getcwd()
print(HOME)

# Pip install method (recommended)

import ultralytics
ultralytics.checks()

from ultralytics import YOLO

"""## CLI Basics

If you want to train, validate or run inference on models and don't need to make any modifications to the code, using YOLO command line interface is the easiest way to get started. Read more about CLI in [Ultralytics YOLO Docs](https://docs.ultralytics.com/usage/cli/).

```
yolo task=detect    mode=train    model=yolov8n.yaml      args...
          classify       predict        yolov8n-cls.yaml  args...
          segment        val            yolov8n-seg.yaml  args...
                         export         yolov8n.pt        format=onnx  args...
```
"""

# !mkdir {HOME}/datasets
# %cd {HOME}/datasets

# !pip install roboflow --quiet

# !pip install roboflow
# from roboflow import Roboflow
# rf = Roboflow(api_key="psIqDVliEBxqttfL5g9G")
# project = rf.workspace("leandro-dias-carneiro-yvdut").project("lbiof_espermatozoides")
# dataset = project.version(1).download("yolov5")

# !pip install roboflow
# from roboflow import Roboflow
# rf = Roboflow(api_key="psIqDVliEBxqttfL5g9G")
# project = rf.workspace("leandro-dias-carneiro-yvdut").project("lbiof_espermatozoides_v1")
# dataset = project.version(2).download("yolov8")

# !pip install roboflow
# from roboflow import Roboflow
# rf = Roboflow(api_key="psIqDVliEBxqttfL5g9G")
# project = rf.workspace("leandro-dias-carneiro-yvdut").project("lbiof_espermatozoides_v1")
# dataset = project.version(5).download("yolov8")

# #no data aug
# from roboflow import Roboflow
# rf = Roboflow(api_key="psIqDVliEBxqttfL5g9G")
# project = rf.workspace("leandro-dias-carneiro-yvdut").project("lbiof_espermatozoides_v2")
# dataset = project.version(1).download("yolov8")


# #512 data aug
# from roboflow import Roboflow
# rf = Roboflow(api_key="psIqDVliEBxqttfL5g9G")
# project = rf.workspace("leandro-dias-carneiro-yvdut").project("lbiof_espermatozoides_v2")
# dataset = project.version(3).download("yolov8")

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
save_dir='runs/detect/train13'

#!yolo task=detect mode=train model=yolov8l.pt data='.datasets/sptz-ger8/data.yaml' \
#        epochs=100 imgsz=1280 batch=8 plots=True save=True save_period=1 save_dir=save_dir

#batch=8
#imgz=544

train_name = 'train'

"""## Validate"""

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
import imutils.paths
modelos = imutils.paths.list_files(f'./{save_dir}/weights')
modelos = list(modelos)
modelos.sort()

for modelo in modelos:
  print('==========',modelo,'==========',flush=True)
  os.system(f"yolo task=detect mode=val conf=0.5 model={modelo} data=sptz.yaml project=sptz name=detect")

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
import imutils.paths
modelos = imutils.paths.list_files(f'./{save_dir}/weights')
modelos = list(modelos)
modelos.sort()

for modelo in modelos:
  print('==========',modelo,'==========',flush=True)
  os.system(f"yolo task=detect mode=val conf=0.4 model={modelo} data=sptz.yaml project=sptz name=detect")


#!yolo task=detect mode=val conf=0.3 model=/content/runs/detect/train/weights/epoch67.pt data=/content/drive/MyDrive/datasets/sptz/data.yaml
